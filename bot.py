import telebot
from telebot import types
from telegram_bot_calendar import DetailedTelegramCalendar, LSTEP

token = '5520340219:AAEGg-RH8fboT6ierDkSMXeAVUoWGTWH7AY'

bot = telebot.TeleBot(token)

admin_users = [478991566]

maybe =""
zapis_k_sashe = ""



#–Ω–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@bot.message_handler(commands=['start'])
def start(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã")
    btn2 = types.KeyboardButton("—è admin")
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫!", reply_markup=markup)


@bot.message_handler(commands=['calendar'])
def calendar(m):
    calendar, step = DetailedTelegramCalendar().build()
    bot.send_message(m.chat.id,f"Select {LSTEP[step]}",reply_markup=calendar)


@bot.callback_query_handler(func=DetailedTelegramCalendar.func())
def cal(c):
    result, key, step = DetailedTelegramCalendar().process(c.data)
    if not result and key:
        bot.edit_message_text(f"Select {LSTEP[step]}",c.message.chat.id,c.message.message_id,reply_markup=key)
    elif result:
        bot.edit_message_text(f"You selected {result}",c.message.chat.id, c.message.message_id)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):

    if 'üëã' in  message.text:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        
        zapis = types.KeyboardButton('–ó–∞–ø–∏—Å—å')
        rtyu = types.KeyboardButton('–ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–ø–∏—Å–µ–π')
        chanal = types.KeyboardButton('–ö–∞–Ω–∞–ª')
        back = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—Å—è')
        markup.add(zapis, rtyu, chanal, back)
        bot.send_message(message.from_user.id, '–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=markup) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞
    
    elif message.text == '–í–µ—Ä–Ω—É—Ç—Å—è':
        start(message)

    elif message.text == '–∫—Ç–æ —è?':
        user_id = message.from_user.id
        bot.send_message(message.from_user.id, f'–≤–∞—à –∞–π–¥–∏ {user_id}', parse_mode='Markdown')

    elif message.text == '–ó–∞–ø–∏—Å—å':
        bot.send_message(message.from_user.id, '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è, —Ç–æ –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ª–æ–≤ "—Ö–æ—á—É –∑–∞–ø–∏—Å—å"', parse_mode='Markdown')

    elif message.text == '–ö–∞–Ω–∞–ª':
        markup = types.InlineKeyboardMarkup()
        btn5 = types.InlineKeyboardButton(text='—Ç—ã–∫–∞—Ç—å —Å—é–¥—ã', url='https://t.me/raznyikolkyi')
        markup.add(btn5)
        bot.send_message(message.from_user.id, "–º–æ–π –∫–∞–Ω–∞–ª", reply_markup = markup)

    elif message.text == '—è admin':
        if message.from_user.id in admin_users:
            get_mess_from_admin(message)   
        else: bot.send_message(message.from_user.id, "–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ –∞–¥–º–∏–Ω")
    elif message.text == '666':
        admin_users.append(message.from_user.id)
        bot.send_message(message.from_user.id, "–£ –≤–∞—Å –ø–æ—è–≤–∏–ª—Å—è –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ")
    
    elif message.text == '–ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–ø–∏—Å–µ–π':
        calendar(message)
    
    
    elif "—Ö–æ—á—É –∑–∞–ø–∏—Å—å" in message.text or "–•–æ—á—É –∑–∞–ø–∏—Å—å" in message.text:
        global zapis_k_sashe
        global maybe
        maybe = f"{zapis_k_sashe} \n @{message.from_user.username} \n {message.text}"
        get_mess_from_zakas(message)
    
    elif message.text =="–¥–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å":
        zapis_k_sashe = maybe
        bot.send_message(message.from_user.id, f"–í–∞—à–∞ –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞ –º–∞—Å—Ç–µ—Ä—É")
        start(message)
    
    elif message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å–∏":
        bot.send_message(message.from_user.id, f"–í—Å–µ –∑–∞–ø–∏—Å–∏: {zapis_k_sashe}")
    elif message.text == "–û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å–∏":
        zapis_k_sashe = ""
        bot.send_message(message.from_user.id, f"–í–∞—à–∏ –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã")




def get_mess_from_admin(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    why = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å–∏')
    who = types.KeyboardButton('–ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–ø–∏—Å–µ–π')
    backk = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—Å—è')
    clear_zap = types.KeyboardButton('–û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø–∏—Å–∏')
    markup.add(why,who,backk, clear_zap)
    bot.send_message(message.from_user.id, '–ø—Ä–∏–≤–µ—Ç, —Ö–æ–∑—è–∏–Ω', reply_markup = markup)
            
def get_mess_from_zakas(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    yes_zakas = types.KeyboardButton('–¥–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å')
    no_zakas = types.KeyboardButton('–Ω–µ—Ç, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—åüëã')
    markup.add(yes_zakas, no_zakas)
    bot.send_message(message.from_user.id, f"–í—ã —É–≤–µ—Ä–µ–Ω–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–º–µ—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ —Å–µ–∞–Ω—Å —Å —Ç–∞–∫–∏–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏? \n{message.text}", reply_markup= markup)

if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)